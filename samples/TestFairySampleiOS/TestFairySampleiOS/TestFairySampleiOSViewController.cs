using System;
using System.Drawing;

#if ! __UNIFIED__
using MonoTouch.Foundation;
using MonoTouch.UIKit;
using MonoTouch.CoreGraphics;
using MonoTouch.CoreAnimation;
#else
using Foundation;
using UIKit;
using CoreGraphics;
using CoreAnimation;
#endif

using TestFairyLib;

namespace TestFairySampleiOS
{
	public partial class TestFairySampleiOSViewController : UIViewController
	{
		private UIView box;
		private NSTimer timer;

		private float angle = 0;

		static private int BoxStride = 96;

		public TestFairySampleiOSViewController (IntPtr handle) : base (handle)
		{
		}
			
		private void StartRotationTimer ()
		{
			timer = NSTimer.CreateRepeatingTimer (1.0f / 60.0f, delegate {
				angle += 2.0f;
				if (angle >= 360.0f) {
					angle = 0.0f;
				}

				box.Layer.Transform = CATransform3D.MakeRotation ((float)(angle / 180.0 * Math.PI), 0, 0, 1);
			});

			NSRunLoop.Current.AddTimer (timer, NSRunLoopMode.Default);
		}

		private void CreateRotatingBox () 
		{
			box = new UIView {
				Frame = new Rectangle ((int)(View.Frame.Width-BoxStride)/2, (int)(View.Frame.Height-BoxStride)/2, BoxStride, BoxStride),
				BackgroundColor = UIColor.Green,
			};

			View.AddSubview (box);
		}

		public override void TouchesMoved (NSSet touches, UIEvent evt)
		{
			base.TouchesMoved (touches, evt);

			UITouch touch = touches.AnyObject as UITouch;
			#if __UNIFIED__
			CGPoint = touch.LocationInView (View);
			#else
			PointF point = touch.LocationInView (View);
			#endif
			box.Layer.Transform = CATransform3D.Identity;
			box.Frame = new Rectangle ((int)(point.X + BoxStride)/2, (int)(point.Y + BoxStride)/2, BoxStride, BoxStride);
			box.Layer.Transform = CATransform3D.MakeRotation ((float)(angle / 180.0 * Math.PI), 0, 0, 1);
		}

		private void CreateTitle ()
		{
			UITextView title = new UITextView {
				Frame = new Rectangle (0, 30, (int)View.Frame.Width, 100),
				TextAlignment = UITextAlignment.Center,
				Font = UIFont.BoldSystemFontOfSize(22),
				Text = "Welcome to TestFairy!",
				TextColor = UIColor.Black,
			};

			View.AddSubview (title);
		}
			
		private void CreateHiddenSubtitle () 
		{
			// this subtitle will be shown on device or simulator, but won't be in the
			// video generated by testfairy
			UIView subtitle = new UITextView {
				Frame = new Rectangle (0, (int)View.Frame.Height - 48, (int)View.Frame.Width, 48),
				TextAlignment = UITextAlignment.Center,
				Font = UIFont.BoldSystemFontOfSize (12),
				Text = "Secret Text!",
				TextColor = UIColor.Red,
			};

			View.AddSubview (subtitle);

			// pass UIView to TestFairy, let it know to hide this in next frames
			TestFairy.HideView (subtitle);
		}

		#region View lifecycle

		public override void ViewDidLoad ()
		{
			Console.WriteLine ("Made it to ViewDidLoad!");

			base.ViewDidLoad ();

			CreateTitle ();
			CreateRotatingBox ();
			CreateHiddenSubtitle ();

			StartRotationTimer ();
		}

		#endregion
	}
}

